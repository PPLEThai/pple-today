# This file is used by fastlane to automate Firebase App Distribution
# Please see
# https://docs.fastlane.tools/getting-started/android/beta-deployment/
# https://thecodingmachine.github.io/react-native-boilerplate/docs/BetaBuild/#android

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Submit a new Beta Build to Firebase App Distribution"
  lane :beta do
    app_id = ENV["FIREBASE_APP_ID"]
    # Grab the latest build number from Firebase App Distribution
    latest_release = firebase_app_distribution_get_latest_release(
      app: app_id,
      service_credentials_file: "key.json",
    )

    # If no release exists, start with build number 1
    if latest_release.nil?
      latest_release = { buildVersion: 0 }
      UI.message "No previous release found on Firebase App Distribution."
    end
    # Increment the build number for the new release
    current_version_code = latest_release[:buildVersion].to_i + 1
    increment_version_code(
      version_code: current_version_code,
      gradle_file_path: "app/build.gradle" # Adjust path if needed
    )
    gradle(
      task: 'assemble',
      build_type: 'Release',
      properties: {
        "android.injected.version.code" => current_version_code,
      }
    )
    changelog = "Beta build for Android\n" \
      "App Environment: #{ENV['APP_ENVIRONMENT']}\n" \
      "Distribute to: #{ENV['DISTRIBUTE_GROUPS']}"
    firebase_app_distribution(
      app: app_id,
      groups: ENV['DISTRIBUTE_GROUPS'] || "dev-team",
      service_credentials_file: "key.json",
      release_notes: changelog,
      # debug: true,
    )
  end

  # https://medium.com/@malikchohra/ci-cd-pipeline-for-react-native-apps-use-fastlane-and-github-actions-dcf101edc423
  desc "Send app to play store as a draft"
  lane :production do
    increment_version_code(
      version_code: 4, # manually set version code
      gradle_file_path: "app/build.gradle"
    )
    gradle(
      task: 'bundle',
      build_type: 'Release',
      properties: {
        "android.injected.signing.store.file" => 'upload-keystore.jks',
        "android.injected.signing.store.password" => ENV['ANDROID_UPLOAD_KEYSTORE_PASSWORD'],
        "android.injected.signing.key.alias" => ENV['ANDROID_UPLOAD_KEYSTORE_ALIAS'],
        "android.injected.signing.key.password" => ENV['ANDROID_UPLOAD_KEYSTORE_PASSWORD'],
      }
    )
    upload_to_play_store(
      track: 'internal',
      # Only releases with status draft may be created on draft app
      # Release needed to be published manually from Play Console
      release_status: "draft",
      # track: 'production',
      # release_status: "completed",
    )
  end
end
