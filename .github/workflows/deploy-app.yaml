name: Deploy Beta Application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Deployment environment'
        options:
          - development
          - staging
        default: 'development'
      android:
        type: boolean
        description: 'Build Android app'
        default: false
      ios:
        type: boolean
        description: 'Build iOS app'
        default: false
      api:
        type: boolean
        description: 'Deploy API'
        default: false
      backoffice:
        type: boolean
        description: 'Deploy Backoffice'
        default: false
      migrate-database:
        type: boolean
        description: 'Run database migrations'
        default: false
      groups:
        type: string
        description: 'Distribute to these groups'
        default: 'dev-team'

permissions:
  contents: read # for checkout
  packages: write # to be able to push the Docker image to GitHub Container Registry

jobs:
  get-deploy-condition:
    runs-on: ubuntu-latest
    outputs:
      deploy-mobile-app: ${{ steps.set-deploy-condition.outputs.deploy-mobile-app }}
      deploy-backoffice: ${{ steps.set-deploy-condition.outputs.deploy-backoffice }}
      deploy-api: ${{ steps.set-deploy-condition.outputs.deploy-api }}
      migrate-database: ${{ steps.set-deploy-condition.outputs.migrate-database }}
    steps:
      - name: Set deploy condition
        id: set-deploy-condition
        run: |
          echo "deploy-mobile-app=${{ github.event.inputs.android || github.event.inputs.ios }}" >> $GITHUB_OUTPUT
          echo "deploy-backoffice=${{ github.event.inputs.backoffice == 'true' && (startsWith(github.ref_name, 'refs/tags/@client/backoffice') || startsWith(github.ref_name, 'refs/heads/')) }}" >> $GITHUB_OUTPUT
          echo "deploy-api=${{ github.event.inputs.api == 'true' && (startsWith(github.ref_name, 'refs/tags/@api/backoffice') || startsWith(github.ref_name, 'refs/heads/')) }}" >> $GITHUB_OUTPUT
          echo "migrate-database=${{ github.event.inputs.migrate-database == 'true' }}" >> $GITHUB_OUTPUT

  deploy-mobile-app:
    name: Deploy Beta Mobile App
    if: ${{ steps.get-deploy-condition.outputs.deploy-mobile-app == 'true' }}
    needs: get-deploy-condition
    uses: ./.github/workflows/mobile-beta-deployment.yaml
    secrets: 'inherit'
    with:
      android: ${{ github.event.inputs.android }}
      ios: ${{ github.event.inputs.ios }}
      groups: ${{ github.event.inputs.groups }}
      environment: ${{ github.event.inputs.environment }}

  deploy-backoffice:
    name: Deploy Backoffice
    if: ${{ steps.get-deploy-condition.outputs.deploy-backoffice == 'true' }}
    needs: get-deploy-condition
    uses: ./.github/workflows/deploy-docker.yaml
    with:
      PACKAGE_NAME: pple-backoffice
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      DOCKER_COMPOSE_FILE: docker-compose.backoffice.yaml
      DOCKER_REGISTRY: ghcr.io
      PROJECT_PATH: ./apps-client/backoffice
    secrets:
      OVPN_CONFIG: ${{ secrets.OVPN_CONFIG }}
      OVPN_USERNAME: ${{ secrets.OVPN_USERNAME }}
      OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}
      OVPN_USER_KEY: ${{ secrets.OVPN_USER_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      WEB_CLIENT_ENV: ${{ secrets.WEB_CLIENT_ENV }}

  deploy-api:
    name: Deploy API
    if: ${{ steps.get-deploy-condition.outputs.deploy-api == 'true' }}
    needs: get-deploy-condition
    uses: ./.github/workflows/deploy-docker.yaml
    with:
      PACKAGE_NAME: pple-api
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      DOCKER_COMPOSE_FILE: docker-compose.api.yaml
      DOCKER_REGISTRY: ghcr.io
      PROJECT_PATH: ./apps-api/backoffice
    secrets:
      OVPN_CONFIG: ${{ secrets.OVPN_CONFIG }}
      OVPN_USERNAME: ${{ secrets.OVPN_USERNAME }}
      OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}
      OVPN_USER_KEY: ${{ secrets.OVPN_USER_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  migrate-database:
    name: Migrate Database
    if: ${{ steps.get-deploy-condition.outputs.migrate-database == 'true' }}
    needs: get-deploy-condition
    uses: ./.github/workflows/migrate-database.yaml
    secrets:
      OVPN_CONFIG: ${{ secrets.OVPN_CONFIG }}
      OVPN_USERNAME: ${{ secrets.OVPN_USERNAME }}
      OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}
      OVPN_USER_KEY: ${{ secrets.OVPN_USER_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_HOST_PORT: ${{ secrets.DATABASE_HOST_PORT }}
