name: Deploy Beta Application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Deployment environment'
        options:
          - development
          - staging
        default: 'development'
      android:
        type: boolean
        description: 'Build Android app'
        default: false
      ios:
        type: boolean
        description: 'Build iOS app'
        default: false
      api:
        type: boolean
        description: 'Deploy API'
        default: false
      backoffice:
        type: boolean
        description: 'Deploy Backoffice'
        default: false
      migrate-database:
        type: boolean
        description: 'Run database migrations'
        default: false
      groups:
        type: string
        description: 'Distribute to these groups'
        default: 'dev-team'

permissions:
  contents: read # for checkout
  packages: write # to be able to push the Docker image to GitHub Container Registry

jobs:
  get-affected-apps:
    name: Get affected applications
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.affected-apps.outputs.packages }}
      deploy-mobile-app: ${{ steps.affected-apps.outputs.deploy-mobile-app }}
      migrate-database: ${{ steps.affected-apps.outputs.migrate-database }}
    steps:
      - name: Get affected web application names
        id: affected-apps
        run: |
          function constructMetadata {
            NAME=$1
            PACKAGE_PATH=$2
            DOCKER_COMPOSE_PATH=$3
            REF=${{ github.ref }}

            if [[ "${{ github.ref }}" == "refs/tags"* ]]; then
              IMAGE_TAG=${{ inputs.environment }}-$(cat $PACKAGE_PATH/package.json | jq -r '.version')
            else 
              IMAGE_TAG=${{ inputs.environment }}-${{ github.sha }}
            fi

            ITEM="{
              \"name\": \"$NAME\",
              \"ref\": \"$REF\",
              \"imageTag\": \"$IMAGE_TAG\",
              \"path\": \"$PACKAGE_PATH\",
              \"version\": \"$IMAGE_TAG\",
              \"dockerComposePath\": \"$DOCKER_COMPOSE_PATH\"
            }"
            
            echo $ITEM
          }

          PACKAGES="[]"

          if [[ ${{ inputs.api }} == true ]]; then
            METADATA=$(constructMetadata "pple-api" "apps-api/backoffice" "docker-compose.api.yaml")
            PACKAGES=$(echo $PACKAGES | jq -c ". += [${METADATA}]")
          fi

          if [[ ${{ inputs.backoffice }} == true ]]; then
              METADATA=$(constructMetadata "pple-backoffice" "apps-client/backoffice" "docker-compose.backoffice.yaml")
              PACKAGES=$(echo $PACKAGES | jq -c ". += [${METADATA}]")
          fi

          echo $PACKAGES | jq

          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
          echo "packages=$PACKAGES"

          echo "mobile-app=${{ github.event.inputs.android == 'true' || github.event.inputs.ios == 'true' }}" >> $GITHUB_OUTPUT
          echo "migrate-database=${{ github.event.inputs.migrate-database == 'true' }}" >> $GITHUB_OUTPUT

  deploy-mobile-app:
    name: Deploy Beta Mobile App
    if: ${{ needs.get-affected-apps.outputs.mobile-app == 'true' }}
    needs: get-affected-apps
    uses: ./.github/workflows/mobile-beta-deployment.yaml
    secrets: 'inherit'
    with:
      android: ${{ github.event.inputs.android }}
      ios: ${{ github.event.inputs.ios }}
      groups: ${{ github.event.inputs.groups }}
      environment: ${{ github.event.inputs.environment }}

  deploy-docker:
    name: Deploy docker application And deploy
    if: ${{ needs.get-affected-apps.outputs.packages != '[]' }}
    needs: get-affected-apps
    uses: ./.github/workflows/deploy-docker.yaml
    with:
      packages: ${{ needs.get-affected-apps.outputs.packages }}
      docker_registry: ghcr.io
    secrets:
      OVPN_CONFIG: ${{ secrets.OVPN_CONFIG }}
      OVPN_USERNAME: ${{ secrets.OVPN_USERNAME }}
      OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}
      OVPN_USER_KEY: ${{ secrets.OVPN_USER_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      WEB_CLIENT_ENV: ${{ secrets.WEB_CLIENT_ENV }}

  migrate-database:
    name: Migrate Database
    if: ${{ needs.get-affected-apps.outputs.migrate-database == 'true' }}
    needs: get-affected-apps
    uses: ./.github/workflows/migrate-database.yaml
    secrets:
      OVPN_CONFIG: ${{ secrets.OVPN_CONFIG }}
      OVPN_USERNAME: ${{ secrets.OVPN_USERNAME }}
      OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}
      OVPN_USER_KEY: ${{ secrets.OVPN_USER_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_HOST_PORT: ${{ secrets.DATABASE_HOST_PORT }}
