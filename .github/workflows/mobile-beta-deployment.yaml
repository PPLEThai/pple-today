name: Mobile Beta Deployment

on:
  workflow_call:
    inputs:
      android:
        type: string
        description: 'Build Android app'
      ios:
        type: string
        description: 'Build iOS app'
      groups:
        type: string
        description: 'Distribute to these groups'
        default: 'dev-team'

jobs:
  build-android:
    name: Build Android
    runs-on: macos-latest
    if: ${{ github.event.inputs.android == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9.9.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: pnpm

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      # - name: Validate Gradle wrapper
      #   uses: gradle/wrapper-validation-action@v1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prebuild Android
        working-directory: apps-client/mobile
        run: npx expo prebuild --platform android

      - name: Install Fastlane
        working-directory: apps-client/mobile
        shell: bash
        run: |
          echo "EXPO_PUBLIC_OIDC_BASE_URL=${{ secrets.EXPO_PUBLIC_OIDC_BASE_URL }}" >> .env
          echo "EXPO_PUBLIC_OIDC_CLIENT_ID=${{ secrets.EXPO_PUBLIC_OIDC_CLIENT_ID }}" >> .env
          echo "EXPO_PUBLIC_BACKEND_BASE_URL=${{ secrets.EXPO_PUBLIC_BACKEND_BASE_URL }}" >> .env
          echo "APP_ENVIRONMENT=${{ secrets.APP_ENVIRONMENT }}" >> .env
          echo "DEVELOPER_APP_IDENTIFIER=${{ secrets.DEVELOPER_APP_IDENTIFIER }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_JSON=${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "DISTRIBUTE_GROUPS=${{ github.event.inputs.groups }}" >> .env
          bash ./fastlane/setup.sh
          cd android && bundle install
        env:
          CI: true

      - name: Build Android App via fastlane
        working-directory: apps-client/mobile/android
        run: fastlane beta
        env:
          CI: true
          CD: true

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    if: ${{ github.event.inputs.ios == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9.9.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0
          cache: pnpm

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prebuild iOS
        working-directory: apps-client/mobile
        run: npx expo prebuild --platform ios

      - name: Set up Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install pods
        working-directory: apps-client/mobile
        run: cd ios && pod install --repo-update && cd ..

      # Note that you might run into fastlane issue of 2 Factor Authentication
      # run `fastlane spaceauth -u <your_apple_username>`
      # copy the output and then single quote it in `FASTLANE_SESSION` variable like this '---\n ...'
      # Read more at README.md in apps-client/mobile
      - name: Set up environment
        working-directory: apps-client/mobile
        shell: bash
        run: |
          echo "EXPO_PUBLIC_OIDC_BASE_URL=${{ secrets.EXPO_PUBLIC_OIDC_BASE_URL }}" >> .env
          echo "EXPO_PUBLIC_OIDC_CLIENT_ID=${{ secrets.EXPO_PUBLIC_OIDC_CLIENT_ID }}" >> .env
          echo "EXPO_PUBLIC_BACKEND_BASE_URL=${{ secrets.EXPO_PUBLIC_BACKEND_BASE_URL }}" >> .env
          echo "APP_ENVIRONMENT=${{ secrets.APP_ENVIRONMENT }}" >> .env
          echo "DEVELOPER_APP_IDENTIFIER=${{ secrets.DEVELOPER_APP_IDENTIFIER }}" >> .env
          echo "FASTLANE_USER=${{ secrets.FASTLANE_USER }}" >> .env
          echo "FASTLANE_PASSWORD=${{ secrets.FASTLANE_PASSWORD }}" >> .env
          echo "FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD=${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}" >> .env
          echo "FASTLANE_SESSION=${{ secrets.FASTLANE_SESSION }}" >> .env
          echo "MATCH_PASSWORD=${{ secrets.MATCH_PASSWORD }}" >> .env
          echo "MATCH_GIT_BASIC_AUTHORIZATION=${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}" >> .env
          echo "PROVISIONING_PROFILE_SPECIFIER=${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}" >> .env
          echo "APP_STORE_CONNECT_TEAM_ID=${{ secrets.APP_STORE_CONNECT_TEAM_ID }}" >> .env
          echo "DEVELOPER_PORTAL_TEAM_ID=${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}" >> .env
          echo "DISTRIBUTE_GROUPS=${{ github.event.inputs.groups }}" >> .env

      - name: Install Fastlane
        working-directory: apps-client/mobile
        shell: bash
        run: |
          bash ./fastlane/setup.sh
          cd ios && bundle install

      - name: Build iOS App via fastlane
        working-directory: apps-client/mobile/ios
        run: fastlane beta
        env:
          CI: true
          CD: true

      # - name: Log Build Output
      #   run: cat /Users/runner/Library/Logs/gym/PPLEToday-PPLEToday.log
      #   if: failure()
