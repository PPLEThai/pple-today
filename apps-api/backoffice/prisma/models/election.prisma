enum ElectionType {
    ONSITE
    ONLINE
    HYBRID
}

enum EligibleVoterType {
    ONSITE
    ONLINE
}

model Election {
    id          String       @id @default(cuid())
    name        String
    description String?
    type        ElectionType

    openRegister  DateTime
    closeRegister DateTime
    openVoting    DateTime
    closeVoting   DateTime
    startResult   DateTime?
    endResult     DateTime?

    publicKey String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    candidates ElectionCandidate[]
    voters     ElectionEligibleVoter[]
    ballots    ElectionEligbleBallot[]

    @@index([name])
}

model ElectionCandidate {
    id           String  @id @default(cuid())
    name         String
    description  String?
    profileImage String?
    number       Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    electionId String
    election   Election @relation(fields: [electionId], references: [id])
}

model ElectionEligibleVoter {
    id         String             @id @default(cuid())
    electionId String
    userId     String
    type       EligibleVoterType?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    election Election @relation(fields: [electionId], references: [id])
    user     User     @relation(fields: [userId], references: [id])

    @@index([userId])
}

model ElectionEligbleBallot {
    id              String  @id @default(cuid())
    electionId      String
    userId          String
    encryptedBallot String
    location        String?
    faceImageURL    String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    election Election @relation(fields: [electionId], references: [id])
    user     User     @relation(fields: [userId], references: [id])
}
