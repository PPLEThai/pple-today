
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
import { makeTypedQueryFactory as $mkFactory } from "../runtime/client"
export const get_candidate_topic = /*#__PURE__*/ $mkFactory("WITH\ncandidate_topic AS (\nSELECT\n*\nFROM\nget_candidate_topic_by_follower ($1)\nUNION ALL\nSELECT\n*\nFROM\nget_candidate_topic_by_interaction ($1)\nUNION ALL\nSELECT\n*\nFROM\nget_candidate_topic_by_similar_hashtag ($1)\n),\nexcluded_topic AS (\nSELECT DISTINCT\ncandidate_topic.topic_id\nFROM\ncandidate_topic\nUNION ALL\nSELECT\nuft.\"topicId\" AS topic_id\nFROM\n\"UserFollowsTopic\" uft\nWHERE\nuft.\"userId\" = $1\n),\nother_candidate_topic AS (\nSELECT\nt.id AS topic_id\nFROM\n\"Topic\" t\nLEFT JOIN excluded_topic et ON t.id = et.topic_id\nWHERE\net.topic_id IS NULL AND t.\"status\" = 'PUBLISHED'\nORDER BY\nRANDOM() DESC\nLIMIT\n10\n),\nfinal_candidate_score AS (\nSELECT\nother_candidate_topic.topic_id,\n0 AS score\nFROM\nother_candidate_topic\nUNION ALL\nSELECT\ncandidate_topic.topic_id,\ncandidate_topic.score\nFROM\ncandidate_topic\n),\nfinal_candidate_score_with_random AS (\nSELECT\nfinal_candidate_score.topic_id,\n(SUM(final_candidate_score.score) + RANDOM()) AS score\nFROM\nfinal_candidate_score\nGROUP BY\nfinal_candidate_score.topic_id\nORDER BY\nscore DESC\nLIMIT\n10\n)\nSELECT\nfinal_candidate_score_with_random.\"topic_id\"\nFROM\nfinal_candidate_score_with_random;")
