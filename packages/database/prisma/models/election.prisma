enum ElectionType {
    ONSITE
    ONLINE
    HYBRID
}

enum EligibleVoterType {
    ONSITE
    ONLINE
}

enum ElectionResultType {
    ONSITE
    ONLINE
}

model Election {
    id                        String       @id @default(cuid())
    name                      String
    description               String?
    location                  String?
    type                      ElectionType
    encryptionPublicKey       String?
    digitalSignaturePublicKey String?
    isCancelled               Boolean      @default(false)

    publishDate   DateTime?
    openRegister  DateTime?
    closeRegister DateTime?
    openVoting    DateTime
    closeVoting   DateTime
    startResult   DateTime?
    endResult     DateTime?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    candidates  ElectionCandidate[]
    voters      ElectionEligibleVoter[]
    voteRecords ElectionVoteRecord[]
    ballots     ElectionBallot[]

    @@index([name])
}

model ElectionCandidate {
    id           String  @id @default(cuid())
    electionId   String
    name         String
    description  String?
    profileImage String?
    number       Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    election Election @relation(fields: [electionId], references: [id])

    results ElectionResult[]

    @@index(electionId)
}

model ElectionEligibleVoter {
    electionId String
    userId     String
    type       EligibleVoterType

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    election Election @relation(fields: [electionId], references: [id])
    user     User     @relation(fields: [userId], references: [id])

    @@id([electionId, userId])
    @@index(userId)
}

model ElectionVoteRecord {
    electionId    String
    userId        String
    ballotId      String?  @unique
    location      String?
    faceImagePath String?
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    election Election        @relation(fields: [electionId], references: [id])
    user     User            @relation(fields: [userId], references: [id])
    ballot   ElectionBallot? @relation(fields: [ballotId], references: [id])

    @@id([electionId, userId])
    @@index(userId)
}

model ElectionBallot {
    id              String   @id @default(cuid())
    electionId      String
    encryptedBallot String
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    election   Election            @relation(fields: [electionId], references: [id])
    voteRecord ElectionVoteRecord?

    @@index(electionId)
}

model ElectionResult {
    id          String             @id @default(cuid())
    candidateId String
    type        ElectionResultType
    count       Int                @default(0)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    candidate ElectionCandidate @relation(fields: [candidateId], references: [id])

    @@unique([candidateId, type])
}
