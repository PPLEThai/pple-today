enum PollType {
    SINGLE_CHOICE
    MULTIPLE_CHOICE
}

enum PollStatus {
    DRAFT
    PUBLISHED
    ARCHIVED
}

model Poll {
    feedItemId  String   @id
    title       String
    description String?
    endAt       DateTime

    type   PollType
    status PollStatus @default(DRAFT)

    topics  PollTopic[]
    options PollOption[]

    feedItem FeedItem @relation(fields: [feedItemId], references: [id], onDelete: Cascade)
}

model PollOption {
    id        String   @id @default(cuid())
    title     String
    votes     Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    pollId      String
    poll        Poll         @relation(fields: [pollId], references: [feedItemId], onDelete: Cascade)
    pollAnswers PollAnswer[]

    @@index([pollId])
}

model PollAnswer {
    id        String   @id @default(cuid())
    userId    String
    optionId  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User       @relation(fields: [userId], references: [id])
    option PollOption @relation(fields: [optionId], references: [id])

    @@unique([userId, optionId])
}

model PollTopic {
    pollId  String
    topicId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    poll  Poll  @relation(fields: [pollId], references: [feedItemId], onDelete: Cascade)
    topic Topic @relation(fields: [topicId], references: [id], onDelete: Cascade)

    @@id([pollId, topicId])
    @@index([topicId])
    @@index([pollId])
}
