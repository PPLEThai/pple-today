enum UserStatus {
    ACTIVE
    SUSPENDED
}

model User {
    id               String  @id @default(cuid())
    name             String
    phoneNumber      String  @unique
    profileImagePath String?
    point            Int     @default(0)

    responsibleArea String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    onBoardingCompleted Boolean    @default(false)
    status              UserStatus @default(ACTIVE)

    numberOfPosts           Int @default(0)
    numberOfFollowers       Int @default(0)
    numberOfFollowing       Int @default(0)
    numberOfFollowingTopics Int @default(0)

    province    String?
    district    String?
    subDistrict String?
    postalCode  String?
    address     Address? @relation(fields: [province, district, subDistrict, postalCode], references: [province, district, subDistrict, postalCode])

    pollAnswers PollAnswer[]

    followings     UserFollowsUser[]  @relation("Follows")
    followers      UserFollowsUser[]  @relation("FollowedBy")
    followedTopics UserFollowsTopic[]

    voters      ElectionEligibleVoter[]
    voteRecords ElectionVoteRecord[]

    linkedPage FacebookPage?

    feedItems     FeedItem[]
    feedReactions FeedItemReaction[]
    feedComments  FeedItemComment[]
    roles         UserRole[]

    @@index([status])
}

model UserRole {
    userId String
    role   String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([userId, role])
}

model AdminUser {
    id   String @id @default(cuid())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    auditLogs AuditLog[]
}
